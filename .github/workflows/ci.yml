name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        architecture: [x64, arm64]
        exclude:
          - os: ubuntu-latest
            architecture: arm64
          - os: windows-latest
            architecture: arm64
          - os: macos-latest
            python-version: "3.8"
            architecture: arm64

    env:
      POETRY_DYNAMIC_VERSIONING_ENABLE: true
      POETRY_DYNAMIC_VERSIONING_COMMANDS: "build,version,test"
      POETRY_DYNAMIC_VERSIONING_DEBUG: true
      POETRY_DYNAMIC_VERSIONING_METADATA: true
      # Optional: Override version for testing
      # POETRY_DYNAMIC_VERSIONING_BYPASS: "0.1.0"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Required for dynamic versioning

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
        cache: "pip"

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry poetry-dynamic-versioning[plugin]
        poetry config virtualenvs.create false

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry poetry-dynamic-versioning[plugin]
        poetry install --with dev,docs

    - name: Check version
      run: |
        poetry version
        poetry run python -c "import pypackage_template; print(pypackage_template.__version__)"

    - name: Run linters
      run: |
        poetry run black . --check
        poetry run flake8 .
        poetry run mypy src/

    - name: Run tests
      run: |
        poetry run pytest --cov --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
